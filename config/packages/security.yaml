security:
    encoders:
        App\Entity\Participant:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\Participant
                #property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            switch_user: true
            anonymous: true
            logout_on_user_change: true
            provider: app_user_provider
            user_checker: App\Security\UserChecker
            form_login:
                csrf_parameter: _csrf_security_token
                login_path: participant_login
                check_path: participant_login
                default_target_path: home_index
            logout:
                path: participant_logout
                target: home_index
            remember_me:
                secret:  '%kernel.secret%'
                lifetime: 7776000


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/sorties, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]
